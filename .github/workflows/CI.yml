name: CI

on:
  pull_request:
  push:
    branches:
      - main
    tags:
      - v*

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}-${{ github.event_name == 'workflow_dispatch' }}
  cancel-in-progress: true

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Initialize git config for testing
        run: |
          git config --global user.email "fake@email.com"
          git config --global user.name "mr fake"
      - name: Install sapling on macos
        if: matrix.os == 'macos-latest'
        run: |
          brew install sapling
      - name: Install sapling on ubuntu
        if : matrix.os == 'ubuntu-latest'
          run: curl -L -o sapling_0.2.20230523-092610+f12b7eee_amd64.Ubuntu22.04.deb https://github.com/facebook/sapling/releases/download/0.2.20230523-092610%2Bf12b7eee/sapling_0.2.20230523-092610%2Bf12b7eee_amd64.Ubuntu22.04.deb
      - name: Install sapling on Windows
        if : matrix.os == 'windows-latest'
          run: |
          curl -L -o sapling.zip "https://github.com/facebook/sapling/releases/download/0.2.20230523-092610%2Bf12b7eee/sapling_windows_0.2.20230523-092610+f12b7eee_amd64.zip"
        7z x sapling.zip
          Expand-Archive sapling.zip 'C:\Program Files'
          setx PATH "$env:PATH;C:\Program Files\Sapling" -m
      - run: cargo test
        env:
          TMPDIR: ${{ runner.temp }}

  linux:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v3
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - uses: messense/maturin-action@v1
      with:
        manylinux: auto
        command: build
        args: --release -o target/dist
    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: target/dist

  windows:
    runs-on: windows-latest
    needs: test
    steps:
    - uses: actions/checkout@v3
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - uses: messense/maturin-action@v1
      with:
        command: build
        args: --release --no-sdist -o dist
    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist

  macos:
    runs-on: macos-latest
    needs: test
    steps:
    - uses: actions/checkout@v3
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - uses: messense/maturin-action@v1
      with:
        command: build
        args: --release --no-sdist -o dist --universal2
    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [ macos, windows, linux, test ]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: wheels
      - name: Publish to PyPI
        uses: messense/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --skip-existing *
